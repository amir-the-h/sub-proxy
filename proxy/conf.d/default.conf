# HTTP server block listening on port ${HTTP_PORT}
server {
    listen ${HTTP_PORT};
    server_name ${SUBDOMAIN}.${SDL}.${TLD} *.${SUBDOMAIN}.${SDL}.${TLD};

    access_log /var/log/nginx/${SUBDOMAIN}.${SDL}.${TLD}.access.log;
    error_log /var/log/nginx/${SUBDOMAIN}.${SDL}.${TLD}.error.log;

    # Forward all requests to the HTTPS server block
    return 301 https://$host:${HTTPS_PORT}$request_uri;
}

# HTTPS server block listening on port ${HTTPS_PORT}
server {
    listen ${HTTPS_PORT} ssl;
    server_name ${SUBDOMAIN}.${SDL}.${TLD} *.${SUBDOMAIN}.${SDL}.${TLD};

    ssl_certificate /openssl/certs/${SUBDOMAIN}.${SDL}.${TLD}.crt;
    ssl_certificate_key /openssl/certs/${SUBDOMAIN}.${SDL}.${TLD}.key;

    access_log /var/log/nginx/${SUBDOMAIN}.${SDL}.${TLD}.access.log;
    error_log /var/log/nginx/${SUBDOMAIN}.${SDL}.${TLD}.error.log;

    # Forward all requests to corresponding upstream including the headers based on the ${SUBDOMAIN}
    location / {
      set $upstream "";
    #   if ($host ~* "^${SUBDOMAIN}\.${SDL}\.${TLD}$") {
    #       set $upstream "backend";
    #   }
    #   if ($host ~* "^service\.${SUBDOMAIN}\.${SDL}\.${TLD}$") {
    #       set $upstream "service";
    #   }
      proxy_pass http://$upstream;  # Use the determined upstream
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}
